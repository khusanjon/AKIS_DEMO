#pragma checksum "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "748d5731985b0266eb46b54cf112250c2d57123d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\_ViewImports.cshtml"
using WebApplication2;

#line default
#line hidden
#line 2 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\_ViewImports.cshtml"
using WebApplication2.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"748d5731985b0266eb46b54cf112250c2d57123d", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6b36aee4455a440795f240a74431c307640c545e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IndexModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/cesium/Widgets/widgets.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery-ajax-unobtrusive/dist/jquery.unobtrusive-ajax.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Search", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-ajax", new global::Microsoft.AspNetCore.Html.HtmlString("true"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-ajax-method", new global::Microsoft.AspNetCore.Html.HtmlString("POST"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("myForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-ajax-success", new global::Microsoft.AspNetCore.Html.HtmlString("onCompleted"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(19, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(66, 47, true);
            WriteLiteral("\r\n<script src=\"../cesium/Cesium.js\"></script>\r\n");
            EndContext();
            BeginContext(113, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0a6f9f8590c644448d7c2967dbb79ec6", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(174, 102, true);
            WriteLiteral("\r\n<script src=\"../template/limitless4/js/plugins/extensions/jquery_ui/interactions.min.js\"></script>\r\n");
            EndContext();
            BeginContext(276, 89, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1b8aabdf88bb401991164e833b368e5a", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(365, 6015, true);
            WriteLiteral(@"
<script src=""../template/limitless4/js/plugins/forms/selects/select2.min.js""></script>
<script src=""../template/limitless4/js/plugins/forms/selects/bootstrap_multiselect.js""></script>


<style>
    html,
    body,
    #cesiumContainer {
        width: 100%;
        height: 100%;
        margin: 0;
        padding: 0;
        overflow: hidden;
    }

    div.sidebar_detail {
        width: 350px;
        position: absolute;
        top: 52px !important;
        bottom: 0;
        background-color: #212930;
        z-index: 997;
        color: white;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        text-align: center;
        overflow: auto;
    }

    div.sidebar_search_results {
        width: 350px;
        position: absolute;
        top: 52px !important;
        bottom: 0;
        background-color: #f5f5f5;
        z-index: 999;
        color: white;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0,");
            WriteLiteral(@" 0, 0.19);
        text-align: center;
    }

    div.sidebar_summary {
        width: 350px;
        position: absolute;
        top: 52px !important;
        bottom: 0;
        background-color: transparent !important;
        z-index: 998;
        color: white;
        text-align: center;
        overflow: auto;
    }

    table.forecast td {
        padding: 5px !important;
    }

    div.indexbar {
        width: 100%;
        left: 350px;
        height: 320px;
        position: absolute;
        bottom: 0px;
        z-index: 997;
        color: white;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        text-align: center;
        overflow: auto;
    }

    div.indexHeaderBar {
        width: 250px;
        left: 375px;
        height: 100px;
        position: absolute;
        top: 60px !important;
        z-index: 997;
        color: white;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0");
            WriteLiteral(@".19);
        text-align: left;
        text-decoration: solid;
        overflow: auto;
        font-size: 12px;
        border-radius: 5px;
    }

    div.card-header {
        background-color: transparent;
        padding-top: 0.45em !important;
        padding-bottom: 0.25em !important;
        border-bottom-width: 1px !important;
    }

    li.list-group-item {
        padding: 0.2rem 0.9rem !important;
    }

    .badge-sm {
        min-width: 1.8em;
        padding: .25em !important;
        margin-left: .1em;
        margin-right: .1em;
        color: white !important;
        cursor: pointer;
    }

    .icon-satellite {
        background-image: url(../images/satellite.svg);
        background-size: cover;
        display: inline-block;
        height: 20px;
        width: 20px;
    }

    .icon-harvest {
        background-image: url(../images/harvest.svg);
        background-size: cover;
        display: inline-block;
        height: 20px;
        width: 20");
            WriteLiteral(@"px;
    }

    .icon-drone {
        background-image: url(../images/drone.svg);
        background-size: cover;
        display: inline-block;
        height: 13px;
        width: 24px;
    }

    .carousel .carousel-indicators li {
        background-color: red;
    }

        .carousel .carousel-indicators li.active {
            background-color: blue;
        }
</style>

<style>
    /* width */
    ::-webkit-scrollbar {
        width: 5px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
        background: #dddddd;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
        background: #888;
    }

        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
</style>

<style>


.flex-parent {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

.input-flex-container {
  display: flex;
  justify-content: space-around");
            WriteLiteral(@";
  align-items: center;
  width: 40vw;
  padding-top:3vw;
  height: 175px;
  max-width: 1000px;
  position: relative;
  z-index: 0;
}

.input {
  width: 25px;
  height: 25px;
  background-color: #2C3E50;
  position: relative;
  border-radius: 50%;
}
.input:hover {
  cursor: pointer;
}
.input::before, .input::after {
  content: """";
  display: block;
  position: absolute;
  z-index: -1;
  top: 50%;
  transform: translateY(-50%);
  background-color: #2C3E50;
  width: 4vw;
  height: 5px;
  max-width: 50px;
}
.input::before {
  left: calc(-4vw + 12.5px);
}
.input::after {
  right: calc(-4vw + 12.5px);
}
.input.active {
  background-color: #2C3E50;
}
.input.active::before {
  background-color: #2C3E50;
}
.input.active::after {
  background-color: #AEB6BF;
}
.input.active span {
  font-weight: 700;
}
.input.active span::before {
  font-size: 13px;
}
.input.active span::after {
  font-size: 15px;
}
.input.active ~ .input, .input.active ~ .input::before, .input.");
            WriteLiteral(@"active ~ .input::after {
  background-color: #AEB6BF;
}
.input span {
  width: 1px;
  height: 1px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  visibility: hidden;
}
.input span::before, .input span::after {
  visibility: visible;
  position: absolute;
  left: 50%;
}
.input span::after {
  content: attr(data-year);
  top: 25px;
  transform: translateX(-50%);
  font-size: 14px;
}
.input span::before {
  content: attr(data-info);
  top: -65px;
  width: 70px;
  transform: translateX(-5px) rotateZ(-45deg);
  font-size: 12px;
  text-indent: -10px;
}

.description-flex-container {
  width: 40vw;
  font-weight: 400;
  font-size: 22px;
  margin-top: 100px;
  max-width: 1000px;
}
.description-flex-container p {
  margin-top: 0;
  display: none;
}
.description-flex-container p.active {
  display: block;
}

");
            EndContext();
            BeginContext(6381, 125, true);
            WriteLiteral("@media (min-width: 1250px) {\r\n  .input::before {\r\n    left: -37.5px;\r\n  }\r\n\r\n  .input::after {\r\n    right: -37.5px;\r\n  }\r\n}\r\n");
            EndContext();
            BeginContext(6507, 256, true);
            WriteLiteral(@"@media (max-width: 850px) {
  .input {
    width: 17px;
    height: 17px;
  }
  .input::before, .input::after {
    height: 3px;
  }
  .input::before {
    left: calc(-4vw + 8.5px);
  }
  .input::after {
    right: calc(-4vw + 8.5px);
  }
}
");
            EndContext();
            BeginContext(6764, 868, true);
            WriteLiteral(@"@media (max-width: 600px) {
  .flex-parent {
    justify-content: initial;
  }

  .input-flex-container {
    flex-wrap: wrap;
    justify-content: center;
    width: 100%;
    height: auto;
    margin-top: 15vh;
  }

  .input {
    width: 60px;
    height: 60px;
    margin: 0 10px 50px;
    background-color: #AEB6BF;
  }
  .input::before, .input::after {
    content: none;
  }
  .input span {
    width: 100%;
    height: 100%;
    display: block;
  }
  .input span::before {
    top: calc(100% + 5px);
    transform: translateX(-50%);
    text-indent: 0;
    text-align: center;
  }
  .input span::after {
    top: 50%;
    transform: translate(-50%, -50%);
    color: #ECF0F1;
  }

  .description-flex-container {
    margin-top: 30px;
    text-align: center;
  }
}



</style>


<div id=""cesiumContainer"">
    ");
            EndContext();
            BeginContext(7632, 68223, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "81f84a12b81041eb9ffb784e806fe083", async() => {
                BeginContext(7765, 39721, true);
                WriteLiteral(@"

        <div id=""feature_panel"" class=""sidebar_detail"" style=""visibility:hidden; padding:5px;"">
            <!-- Left sidebar component -->
            <div class=""sidebar sidebar-dark sidebar-secondary sidebar-expand-xl"" style=""display: block; width:auto !important;"">
                <!-- Sidebar content -->
                <div class=""sidebar-content"">
                    <div class=""card"">
                        <div class=""card-body"" style=""text-align:left;padding:0.5rem !important;"">
                            <div class=""btn-group btn-group-justified btn-group-sm"">
                                <div class=""btn-group"">
                                    <button type=""button"" class=""btn btn-dark"" onclick=""showIndexPanel()""> <i class=""icon-satellite mr-2""></i>Спутник</button>
                                </div>
                                <div class=""btn-group"">
                                    <button type=""button"" class=""btn btn-dark"" onclick=""showDronePanel()""><i class=""ic");
                WriteLiteral(@"on-drone mr-2""></i>БПЛА</button>
                                </div>
                            </div>
                            <div class=""btn-group btn-group-justified btn-group-sm"" style=""padding-top:5px;"">
                                <div class=""btn-group"">
                                    <button type=""button"" class=""btn btn-dark"" data-toggle=""modal"" data-target=""#analysis-modal""><i class=""icon-bubble-lines3 ml-2""></i>  Анализ</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class=""card"">
                        <div class=""card-header header-elements-inline"">
                            <span class=""text-uppercase font-size-sm font-weight-semibold"">
                                <i class=""icon-stack-check mr-2""></i>
                                Информация о сорте
                            </span>
                            <div class=""header-element");
                WriteLiteral(@"s"">
                                <div class=""list-icons"">
                                    <a class=""list-icons-item"" data-action=""collapse""></a>
                                </div>
                            </div>
                        </div>

                        <div class=""card-body"" style=""text-align:left;padding:0.5rem !important;"">

                            <ul class=""list-group border-x-0 rounded-0;"" style=""background-color: #324148; "">
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Наименование сортов:</span>
                                    <div id=""col1"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Название культуры:</span>
                                    <div id=""col2"" class=""ml-auto""></div>
                                </l");
                WriteLiteral(@"i>

                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Дата посадки:</span>
                                    <div id=""col4"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Пророст, дата:</span>
                                    <div id=""col5"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Рост растения:</span>
                                    <div id=""col8"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Период роста:</span>
                                    <div id=""col9"" cla");
                WriteLiteral(@"ss=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Урожайность:</span>
                                    <div id=""col10"" class=""ml-auto""></div>
                                </li>
                            </ul>

                        </div>
                    </div>

                    <div class=""card  card-collapsed"">
                        <div class=""card-header header-elements-inline"">
                            <span class=""text-uppercase font-size-sm font-weight-semibold"">
                                <i class=""icon-stack-check mr-2""></i>
                                Информация о земле
                            </span>
                            <div class=""header-elements"">
                                <div class=""list-icons"">
                                    <a class=""list-icons-item"" data-action=""collapse""></a>
    ");
                WriteLiteral(@"                            </div>
                            </div>
                        </div>

                        <div class=""card-body"" style=""text-align:left;padding:0.5rem !important;"">
                            <ul class=""list-group border-x-0 rounded-0;"" style=""background-color: #324148; "">
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Область:</span>
                                    <div id=""col11"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Район:</span>
                                    <div id=""col12"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Массив:</span>
                              ");
                WriteLiteral(@"      <div id=""col13"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Кадастровый номер:</span>
                                    <div id=""col14"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Плошадь:</span>
                                    <div id=""col3"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Фермер:</span>
                                    <div id=""col15"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">ИНН");
                WriteLiteral(@":</span>
                                    <div id=""col16"" class=""ml-auto""></div>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class=""card  card-collapsed"">
                        <div class=""card-header header-elements-inline"">
                            <span class=""text-uppercase font-size-sm font-weight-semibold"">
                                <i class=""icon-stack-check mr-2""></i>
                                Характеристики почвы
                            </span>
                            <div class=""header-elements"">
                                <div class=""list-icons"">
                                    <a class=""list-icons-item"" data-action=""collapse""></a>
                                </div>
                            </div>
                        </div>

                        <div class=""card-body"" style=""text-align:left;padding:0.5rem !important;"">");
                WriteLiteral(@"
                            <ul class=""list-group border-x-0 rounded-0;"" style=""background-color: #324148; "">
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Балбонитет:</span>
                                    <div id=""col17"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Гумус:</span>
                                    <div id=""col18"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Фосфор:</span>
                                    <div id=""col19"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-");
                WriteLiteral(@"weight-semibold"">Калий:</span>
                                    <div id=""col20"" class=""ml-auto""></div>
                                </li>
                            </ul>
                            <button type=""button"" class=""btn btn-dark"" style=""width:100%;"" data-toggle=""modal"" data-target=""#agrotechnical-tasks-modal""><i class=""icon-bubble-lines3 ml-2""></i> Использование удобрений</button>


                        </div>
                    </div>

                    <div class=""card  card-collapsed"">
                        <div class=""card-header header-elements-inline"">
                            <span class=""text-uppercase font-size-sm font-weight-semibold"">
                                <i class=""icon-droplets mr-2""></i>
                                Потребление воды
                            </span>
                            <div class=""header-elements"">
                                <div class=""list-icons"">
                                    <a class=""list-icon");
                WriteLiteral(@"s-item"" data-action=""collapse""></a>
                                </div>
                            </div>
                        </div>

                        <div class=""card-body"" style=""text-align:left;padding:0.5rem !important;"">
                            <ul class=""list-group border-x-0 rounded-0;"" style=""background-color: #324148; "">


                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Объёма разового полива:</span>
                                    <div id=""col23"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Количество поливов за сезон:</span>
                                    <div id=""col7"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    ");
                WriteLiteral(@"<span class=""font-weight-semibold"">Годовой объём орошения:</span>
                                    <div id=""col6"" class=""ml-auto""></div>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class=""card  card-collapsed"">
                        <div class=""card-header header-elements-inline"">
                            <span class=""text-uppercase font-size-sm font-weight-semibold"">
                                <i class=""icon-graph mr-2""></i>
                                Прогноз урожая
                            </span>
                            <div class=""header-elements"">
                                <div class=""list-icons"">
                                    <a class=""list-icons-item"" data-action=""collapse""></a>
                                </div>
                            </div>
                        </div>

                        <div class=""card-body"" style=""");
                WriteLiteral(@"text-align:left;padding:0.5rem !important;"">
                            <ul class=""list-group border-x-0 rounded-0;"" style=""background-color: #324148; "">

                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Прогноз урожая:</span>
                                    <div id=""col21"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Точность прогноза:</span>
                                    <div id=""col22"" class=""ml-auto""></div>
                                </li>
                                <li class=""list-group-item"">
                                    <span class=""font-weight-semibold"">Нормативная урожайность:</span>
                                    <div id=""col31"" class=""ml-auto""></div>
                                </li>
                                <li c");
                WriteLiteral(@"lass=""list-group-item"">
                                    <span class=""font-weight-semibold"">Оценка продуктивности:</span>
                                    <div id=""col32"" class=""ml-auto""></div>
                                </li>
                               
                            </ul>                           
                        </div>
                    </div>
                </div>
                <!-- /sidebar content -->
            </div>
            <!-- /left sidebar component -->
        </div>

        <div id=""index_panel"" class=""indexbar"" style=""visibility:hidden; padding:5px;"">
            <div class=""sidebar sidebar-dark sidebar-secondary sidebar-expand-xl"" style=""width:100% !important; height:310px;"">
                <!-- Sidebar content -->
                <div class=""sidebar-content"">
                    <div class=""card"">
                        <div id=""sat_index_buttons"" class=""card-header row"">
                            <div class=""col-10"" sty");
                WriteLiteral(@"le=""text-align:left;"">
                                <button type=""button"" class=""btn btn-dark""> <i class=""icon-satellite mr-2""></i>Спутник</button>
                                <div class=""btn-group btn-group-toggle btn-group-sm"" data-toggle=""satButtons"">
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Satellite','NDVI')"">NDVI</button>
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Satellite','SAVI')"">SAVI</button>
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Satellite','EVI')"">EVI</button>
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Satellite','NDMI')"">NDMI</button>
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Satellite','NDWI')"">NDWI</button>
                                </di");
                WriteLiteral(@"v>
                            </div>
                            <div class=""col-2"" style=""text-align:right;"">
                                <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""showIndexInfo()""><i class=""icon-info3 mr-1""></i></button>
                            </div>
                        </div>

                        <div id=""uav_index_buttons"" class=""card-header row d-none"">
                            <div class=""col-10"" style=""text-align:left;"">
                                <button type=""button"" class=""btn btn-dark""> <i class=""icon-drone mr-2""></i>БПЛА</button>
                                <div class=""btn-group btn-group-toggle btn-group-sm"" data-toggle=""satButtons"">
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Uav','NDVI')"">NDVI</button>
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Uav','NDRE')"">NDRE</button>
            ");
                WriteLiteral(@"                        <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Uav','GNDVI')"">gNDVI</button>
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Uav','RECL')"">RECL</button>
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Uav','DSWI')"">DSWI</button>
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Uav','CVI')"">CVI</button>
                                    <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""setGraph('Uav','CIGREEN')"">CIGREEN</button>
                                </div>
                            </div>
                            <div class=""col-2"" style=""text-align:right;"">
                                <button type=""button"" class=""btn btn-primary btn-dark"" onclick=""showIndexInfo()""><i class=""icon-info3 mr-1""></i></button>
                            <");
                WriteLiteral(@"/div>
                        </div>

                        <div class=""card-body"">
                            <div class=""chart-container"">
                                <div class=""chart has-fixed-height"" id=""line_zoom"" style=""height:250px; ""></div>
                            </div>
                        </div>
                    </div>

                </div>
                <!-- sidebar content -->
            </div>
        </div>

        <div id=""index_header_panel"" class=""indexHeaderBar sidebar sidebar-dark"" style=""visibility: hidden; padding:10px;"">
            <div class=""row"" style=""height:30px;"">
                <div class=""col-10"" style="""">
                    <div id=""index_header"" style=""text-align: left;"">
                    </div>
                </div>
                <div class=""col-2"" style="""">
                    <button type=""button"" class=""close"" style=""color:white;"" onclick=""hideIndexLayer()"">×</button>
                </div>
            </div>

    ");
                WriteLiteral(@"        <div class=""row"" style=""height:20px;"">
                <div class=""col-12"">
                    <div id=""slider"" style=""padding-right:10px; padding-left:10px;""></div>
                </div>
            </div>
            <div class=""row"" style=""height: 35px;text-align: center;"">
                <div class=""col-12"" style="""">
                    <img id=""legand_image"" />
                </div>
            </div>
        </div>

        <div id=""agrotechnical-tasks-modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=""true"">
            <div class=""modal-dialog modal-lg"">
                <div class=""modal-content"">
                    <div class=""modal-header bg-primary"">
                        <h5 class=""modal-title"">Использование удобрений</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div class=""modal-body"">
                        <h6 class=""font-weight-semibold");
                WriteLiteral(@""">Использование удобрений</h6>

                        <table class=""table text-center table-bordered table-sm"">
                            <thead>
                                <tr class=""table-primary"">
                                    <th>Добавки</th>
                                    <th>Урожайность (ц/га)</th>
                                    <th>Средние кол-во на 1 цент/га (кг)</th>
                                    <th>Плошадь (га)</th>
                                    <th>Итого (кг)</th>
                                </tr>
                            </thead>
                            <tbody class=""water1"">
                                <tr>
                                    <td>Азот</td>
                                    <td><span id=""normAzotCol"" class=""font-weight-semibold""></span></td>
                                    <td><span id=""valueAzotcol"" class=""font-weight-semibold""></span></td>
                                    <td><span id=""areaAzotcol"" cl");
                WriteLiteral(@"ass=""font-weight-semibold""></span></td>
                                    <td><span id=""totalAzotcol"" class=""font-weight-semibold""></span></td>
                                </tr>
                                <tr>
                                    <td>Фосфор</td>
                                    <td><span id=""normPhoshorCol"" class=""font-weight-semibold""></span></td>
                                    <td><span id=""valuePhosphorcol"" class=""font-weight-semibold""></span></td>
                                    <td><span id=""areaPhoshorCol"" class=""font-weight-semibold""></span></td>
                                    <td><span id=""totalPhosphorcol"" class=""font-weight-semibold""></span></td>
                                </tr>
                                <tr>
                                    <td>Калий</td>
                                    <td><span id=""normPotassiumCol"" class=""font-weight-semibold""></span></td>
                                    <td><span id=""valuePostassiumc");
                WriteLiteral(@"ol"" class=""font-weight-semibold""></span></td>
                                    <td><span id=""areaPotassiumCol"" class=""font-weight-semibold""></span></td>
                                    <td><span id=""totalPotassiumcol"" class=""font-weight-semibold""></span></td>
                                </tr>
                            </tbody>
                        </table>


                        <br>
                        <br>

                        <div class=""card  card-collapsed"">
                            <div class=""card-header header-elements-inline"">
                                <span class=""text-uppercase font-size-sm font-weight-semibold"">
                                    <i class=""icon-stack-check mr-2""></i>
                                    Детали анализа
                                </span>
                                <div class=""header-elements"">
                                    <div class=""list-icons"">
                                        <a class=");
                WriteLiteral(@"""list-icons-item"" data-action=""collapse""></a>
                                    </div>
                                </div>
                            </div>

                            <div class=""card-body"" style=""text-align:left;padding:0.5rem !important;"">

                                <table class=""table text-center table-bordered table-sm"">
                                    <thead>
                                        <tr class=""table-primary"">
                                            <th>pH нейтрал (pH=7)</th>
                                            <th>NO<sub>3</sub> (мк/кг)</th>
                                            <th>Активный P<sub>2</sub>O<sub>5</sub> (мк/кг)</th>
                                            <th>Количество</th>
                                        </tr>
                                    </thead>
                                    <tbody class=""water1"">
                                        <tr>
                                  ");
                WriteLiteral(@"          <td>6.801</td>
                                            <td>15</td>
                                            <td>42.97</td>
                                            <td class=""bg-warning"">Среднее значение</td>
                                        </tr>
                                    </tbody>
                                </table>
                                <br>
                                <br>
                                <div class=""row"">
                                    <div class=""col-5"">
                                        <table class=""table text-center table-bordered table-sm"">
                                            <thead>
                                                <tr class=""table-primary"">
                                                    <th>Заменитель К<sub>2</sub>O (мк/кг)</th>
                                                    <th>Количество</th>
                                                </tr>
                    ");
                WriteLiteral(@"                        </thead>
                                            <tbody class=""water1"">
                                                <tr>
                                                    <td>170</td>
                                                    <td class=""bg-danger"">Ниже нормы</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class=""col-1"">

                                    </div>
                                    <div class=""col-6"">
                                        <table class=""table text-center table-bordered table-sm"">
                                            <thead>
                                                <tr class=""table-primary"">
                                                    <th>Гумус (%)</th>
                                                ");
                WriteLiteral(@"    <th>Количество</th>
                                                </tr>
                                            </thead>
                                            <tbody class=""water1"">
                                                <tr>
                                                    <td>2.9</td>
                                                    <td class=""bg-success"">Выше нормы</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закрыть</button>
                    </div>
                </div>
            </div>
        </div>

        <div id=""far");
                WriteLiteral(@"mer-recommendations-modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=""true"">
            <div class=""modal-dialog modal-lg"">
                <div class=""modal-content"">
                    <div class=""modal-header bg-primary"">
                        <h5 class=""modal-title"">Коробочный червь</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div class=""modal-body"">
                        <div class=""row"">
                            <div class=""col-4"">
                                <iframe id=""agrotechnical-tasks-video"" class=""embed-responsive-item"" src="""" style="" width:100%; padding: 10px 10px 10px 10px; border: 1px solid #BFBFBF;""></iframe>

                            </div>
                            <div id=""analysis-body"" class=""modal-body"">
                        <h6 class=""font-weight-semibold"">Коробочный червь</h6>
                        <p>Хлопковая совка (короб");
                WriteLiteral(@"очный червь). Этот вредитель очень распространен на соевых полях. По внешнему виду бабочка имеет одно большое почковидное пятно посредине большого переднего крыла. Бабочка откладывает яйца на ранних стадиях сои. Тело червя темно-зеленое, так как он питается зелеными листьями, покрытыми мелкими волосками и пятнами, эти черви питаются сначала листьями, а затем цветочными почками.</p>
                        <hr>
                        <div class=""row"">
                            <div class=""col-8"">
                                <h6 class=""font-weight-semibold"">Биологические метод борьбы</h6>
                                <p>Установить 1 феромоновую ловушку на каждые 2 га соевой площади и при попадании 2-3 бабочек на 1 ловушку за ночь выпускать по 1 грамму на 1 га трихограммового яйцееда 3 раза через 4-5 дней против каждого поколения вредителя. 1:20 от бракона энтомофага против немолодых и взрослых личинок совки; 1:10; Против каждого поколения вредителя выпускать в соотношении 1:5 3 раза через 4-5 дне");
                WriteLiteral(@"й по схеме 10х10м.</p>
                            </div>
                            <div class=""col-4"">
                                <div class=""embed-responsive embed-responsive-16by9"" style=""width:250px; height:150px;"">
                                    <iframe id=""agrotechnical-tasks-video"" class=""embed-responsive-item"" src="""" style="" padding: 10px 10px 10px 10px; border: 1px solid #BFBFBF;""></iframe>
                                </div>
                            </div>
                        </div>
                        <hr>

                        <h6 class=""font-weight-semibold"">Химический метод борьбы</h6>
                        <p>В среднем химическую обработку проводят при наличии более 8-10 коробочных червей на 100  кустов сои. При этом обработка должна проводиться в научно обоснованные сроки, то есть когда бабочки откладывают яйца и появляются маленькие молодые червячки. Это гарантия высокой производительности. Если в поле появились средневозрастные и старые личинки, гара");
                WriteLiteral(@"нтией получения высоких результатов является применение препаратов с активными веществами эмамектина бензоата или индоксакарба (сюррендер, эмамекс, проклайм, аваунт и др.).</p>

                        <hr>

                        <h6 class=""font-weight-semibold"">Агротехнические методы борьбы</h6>
                        <p>Своевременная и тщательная обработка почвы – одно из самых необходимых условий выращивания здоровых и устойчивых растений. Вспашка земли на глубину 30 см (а на засоренных полях 32-35 см) бороной или двухрядным плугом через равные промежутки времени является мощным средством уничтожения вредителей, семян сорняков и возбудителей болезней. Основной причиной глубокой вспашки в осенний период является уничтожение вредителей, которые в циклический период уходят в зимнюю спячку. Это также создает условия для вычесывания стеблей сорняков.</p>

                    </div>
                            <div class=""col-8"">
                                <p>Хлопковая совка (коробочный червь). ");
                WriteLiteral(@"Этот вредитель очень распространен на соевых полях. Вредитель семейства совок. Вред наносят личинки вредителя поедая бутоны, завязи и листья сои.</p>
                                <h6 class=""font-weight-semibold"">Биологические метод борьбы</h6>

                                Выпуск по 1 грамму на 1 гектар трихограммового яйцееда.
                                <br>
                                Применение бракона энтомофага против средневозрастных и взрослых личинок совки.
                            </div>
                        </div>
                        <hr>
                        <h6 class=""font-weight-semibold"">Химический метод борьбы</h6>
                        <p>В среднем химическую обработку проводят при наличии более 8-10 коробочных червей на 100 кустов сои. При этом обработка должна проводиться в определённые, научно обоснованные сроки, то есть, когда бабочки откладывают яйца и появляются маленькие молодые червячки. Это гарантия высокой производительности такого метода борьб");
                WriteLiteral(@"ы. Если в поле появились средневозрастные и старые личинки, гарантией получения высоких результатов, является применение препаратов с активными веществами эмамектина бензоата или индоксакарба (сюррендер, эмамекс, проклайм, аваунт и др.).</p>
                        <table class=""table table-bordered text-center"">
                            <thead text-center>
                                <tr>
                                    <th colspan=""2"">ВЕРТИМЕК</th>
                                    <th colspan=""2"">ДАЛАМЕКТИН</th>
                                    <th colspan=""2"">МЕКАР</th>
                                    <th colspan=""2"">БЕСТСЕЛЛЕР</th>
                                    <th colspan=""2"">ФАСКОРД</th>
                                    <th colspan=""2"">МОСПИЛАН</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>1.8% эм.к.</td>
         ");
                WriteLiteral(@"                           <td>0.4-0.5 литр/га</td>
                                    <td>1.8% эм.к.</td>
                                    <td>0.5 литр/га</td>
                                    <td>18 г/л м.эм. (Б)</td>
                                    <td>0.5 литр/га</td>
                                    <td>10% эм.к. (Б)</td>
                                    <td>0.3 литр/га</td>
                                    <td>100 г/л эм.к.(Б)</td>
                                    <td>0.25 литр/га</td>
                                    <td>20% н.кук.</td>
                                    <td>0.3 кг/га</td>
                                </tr>
                            </tbody>
                        </table>
                        <hr>
                        <div class=""row"">
                            <div class=""col-6"">
                                <h6 class=""font-weight-semibold"">Агротехнические методы борьбы</h6>
                                <p>
           ");
                WriteLiteral(@"                         -Глубокая зяблевая вспашка для уничтожения куколок.
                                    <br>
                                    -Культивация и обработка пропашных междурядий.
                                    <br>
                                    -Уничтожение сорняковой растительности.
                                    <br>
                                    -Уборка растительных остатков, после сбора урожая.
                                </p>
                            </div>
                            <div class=""col-6"">

                            </div>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закрыть</button>
                    </div>
                </div>
            </div>
        </div>

        <div id=""meteo-data-modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=");
                WriteLiteral(@"""true"">
            <div class=""modal-dialog modal-sm"">
                <div class=""modal-content"">
                    <div class=""modal-header bg-primary"">
                        <h5 class=""modal-title"">Метеорологические наблюдения</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div id=""meteo-data-div"" class=""modal-body"">
                        <ul class=""list-group border-x-0 rounded-0;"">
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Дата/время:</span>
                                <div id=""dat1"" class=""ml-auto""></div>
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Температура:</span>
                                <div id=""dat2"" class=""ml-auto""></div>°С
                            </li>

              ");
                WriteLiteral(@"              <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Влажность:</span>
                                <div id=""dat3"" class=""ml-auto""></div>%
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Давление:</span>
                                <div id=""dat4"" class=""ml-auto""></div> Па
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Температура конденсации:</span>
                                <div id=""dat5"" class=""ml-auto""></div>°С
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Осадки:</span>
                                <div id=""dat6"" class=""ml-auto""></div> мм
                            </li>
                   ");
                WriteLiteral(@"         <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Скорость ветра:</span>
                                <div id=""dat7"" class=""ml-auto""></div> км/ч
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Влажность10:</span>
                                <div id=""dat8"" class=""ml-auto""></div>%
                            </li>

                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Влажность20:</span>
                                <div id=""dat9"" class=""ml-auto""></div>%
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Влажность30:</span>
                                <div id=""dat10"" class=""ml-auto""></div>%
                            </li>
                     ");
                WriteLiteral(@"       <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Темп10:</span>
                                <div id=""dat11"" class=""ml-auto""></div>°С
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Темп20:</span>
                                <div id=""dat12"" class=""ml-auto""></div>°С
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Темп30:</span>
                                <div id=""dat13"" class=""ml-auto""></div>°С
                            </li>
                        </ul>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закрыть</button>
                    </div>
                </div>
            </div>
       ");
                WriteLiteral(@" </div>

        <div id=""water-consump-modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=""true"">
            <div class=""modal-dialog modal-lg"">
                <div class=""modal-content"">
                    <div class=""modal-header  bg-primary"">
                        <h5 class=""modal-title""><i class=""icon-droplets mr-2""></i>Потребление воды</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div class=""modal-body"">
                        <div class=""container"">
                            <div class=""row"">
                                <div class=""col col-5"">
                                    <h5>Площадь : 3.41 га</h5>
                                    <img");
                EndContext();
                BeginWriteAttribute("src", " src=", 47486, "", 47535, 1);
#line 994 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\Home\Index.cshtml"
WriteAttributeValue("", 47491, Url.Content("../images/irrigation_map.jpg"), 47491, 44, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(47535, 9470, true);
                WriteLiteral(@" style=""width:100%; border:solid 1px gray;"" class=""rounded"" />
                                </div>
                                <div class=""col col-7"" style=""vertical-align:middle;"">
                                    <h5>Расход Воды : 9052 м<sup>3</sup></h5>
                                    <table class=""table text-center table-bordered table-sm"">
                                        <thead>
                                            <tr class=""table-primary"">
                                                <th>№</th>
                                                <th>Дата</th>
                                                <th>Объём полива (м<sup>3</sup>)</th>
                                                <th>Расход воды (м<sup>3</sup>)</th>
                                                <th>Эффективность</th>
                                            </tr>
                                        </thead>
                                        <tbody class=""water1"">
    ");
                WriteLiteral(@"                                        <tr>
                                                <td>1</td>
                                                <td>20.05.2022</td>
                                                <td>2898</td>
                                                <td>3005</td>
                                                <td>%96.44   <i class=""icon-warning mr-2"" style=""color:red;""></i></td>
                                            </tr>
                                            <tr>
                                                <td>2</td>
                                                <td>15.06.2022</td>
                                                <td>2898</td>
                                                <td>3019</td>
                                                <td>%95.99  <i class=""icon-warning mr-2"" style=""color:red;""></i></td>
                                            </tr>
                                            <tr>
                           ");
                WriteLiteral(@"                     <td>3</td>
                                                <td>04.07.2022</td>
                                                <td>2898</td>
                                                <td>3028</td>
                                                <td>%95.7   <i class=""icon-warning mr-2"" style=""color:red;""></i></td>
                                            </tr>
                                            <tr>
                                                <td>4</td>
                                                <td>02.08.2022</td>
                                                <td>2575</td>
                                                <td>-</td>
                                                <td>-</td>
                                            </tr>
                                            <tr>
                                                <td>5</td>
                                                <td>18.08.2022</td>
                                  ");
                WriteLiteral(@"              <td>1292</td>
                                                <td>-</td>
                                                <td>-</td>
                                            </tr>
                                            <tr class=""table-primary"">
                                                <td colspan=""2"">Итого</td>
                                                <td>12563</td>
                                                <td>9052</td>
                                                <td>%138.79   <i class=""icon-warning mr-2"" style=""color:red;""></i></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закр");
                WriteLiteral(@"ыть</button>
                    </div>
                </div>
            </div>
        </div>

        <div id=""index_info_modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=""true"">
            <div class=""modal-dialog modal-lg"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 id=""index_info_header"" class=""modal-title""></h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div id=""index_info_body"" class=""modal-body"">

                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закрыть</button>
                    </div>
                </div>
            </div>
        </div>

        <div id=""analysis-modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=""true"">
            <");
                WriteLiteral(@"div class=""modal-dialog modal-lg"">
                <div class=""modal-content"">
                    <div class=""modal-header bg-primary"">
                        <h5 id=""analysis-header"" class=""modal-title""></h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div id=""analysis-body1"" class=""modal-body"">
                    
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закрыть</button>
                    </div>
                </div>
            </div>
        </div>

        <div id=""general_info_modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=""true"">
            <div class=""modal-dialog modal-lg"">
                <div class=""modal-content"">
                    <div class=""modal-header bg-primary"">
                        <h5 id=""index_info_header"" class=");
                WriteLiteral(@"""modal-title"">Общая информация об участке</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div id=""index_info_body"" class=""modal-body"">
                        <div class=""row"">
                            <div class=""col-7"">
                                <ul class=""list-group border-x-0 rounded-0;"">

                                    <li class=""list-group-item"">
                                        <span class=""font-weight-semibold"">Название культуры:</span>
                                        <div id=""col6"" class=""ml-auto"">Соя</div>
                                    </li>

                                    <li class=""list-group-item"">
                                        <span class=""font-weight-semibold"">Плошадь:</span>
                                        <div id=""col6"" class=""ml-auto"">3.4 га</div>
                                    </li>

                                ");
                WriteLiteral(@"    <li class=""list-group-item"">
                                        <span class=""font-weight-semibold"">Номер контура:</span>
                                        <div id=""col6"" class=""ml-auto"">2261а</div>
                                    </li>

                                    <li class=""list-group-item"">
                                        <span class=""font-weight-semibold"">Балбонитет:</span>
                                        <div id=""col6"" class=""ml-auto"">69</div>
                                    </li>

                                    <li class=""list-group-item"">
                                        <span class=""font-weight-semibold"">Оросительные нормы:</span>
                                        <div id=""col6"" class=""ml-auto"">800-900 м<sup>3</sup>/га            </div>
                                    </li>

                                    <li class=""list-group-item"">
                                        <span class=""font-weight-semibold"">Наимен");
                WriteLiteral(@"ование почвы:</span>
                                        <div id=""col6"" class=""ml-auto"">суғориладиган ўтлоқи тупроқ</div>
                                    </li>

                                    <li class=""list-group-item"">
                                        <span class=""font-weight-semibold"">Механический состав:</span>
                                        <div id=""col6"" class=""ml-auto"">оғир қумоқли</div>
                                    </li>

                                    <li class=""list-group-item"">
                                        <span class=""font-weight-semibold"">влажность почвы:</span>
                                        <div id=""col6"" class=""ml-auto"">20 %</div>
                                    </li>

                                    <li class=""list-group-item"">
                                        <span class=""font-weight-semibold"">Глубина культвации:</span>
                                        <div id=""col6"" class=""ml-auto"">40 см</div>");
                WriteLiteral("\r\n                                    </li>\r\n                                </ul>\r\n\r\n\r\n                            </div>\r\n\r\n                            <div class=\"col-5\" style=\"vertical-align:middle;\">\r\n                                <img id=\"genImg\"");
                EndContext();
                BeginWriteAttribute("src", " src=", 57005, "", 57053, 1);
#line 1160 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\Home\Index.cshtml"
WriteAttributeValue("", 57010, Url.Content("../images/general_image.jpg"), 57010, 43, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(57053, 11401, true);
                WriteLiteral(@" style=""width: 100%;border-radius: 5px;""/>
                            </div>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закрыть</button>
                    </div>
                </div>
            </div>
        </div>

        <div id=""forecast-modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=""true"">
            <div class=""modal-dialog modal-full"">
                <div class=""modal-content"">
                    <div id=""analysis-header"" class=""modal-header bg-primary"">
                        <h5 class=""modal-title"">Подробный прогноз</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div id=""analysis-body"" class=""modal-body"">

                                <div class=""row"">
                                    <div");
                WriteLiteral(@" class=""col-7"">
                                        <div class=""card  card-collapsed"">
                                            <div class=""card-header header-elements-inline"">
                                                <span class=""text-uppercase font-size-sm font-weight-semibold"">
                                                    <i class=""icon-stack-check mr-2""></i>
                                                    Калькуляция
                                                </span>
                                                <div class=""header-elements"">
                                                    <div class=""list-icons"">
                                                        <a class=""list-icons-item"" data-action=""collapse""></a>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class=""card-body"" style");
                WriteLiteral(@"=""text-align:left;padding:0.5rem !important;"">
                                                <h4>ОУ = У х П</h4>
                                                <h4>ОП = ПР / мин(ОУ)</h4>
                                            </div>
                                        </div>
                                        <table class=""table text-center table-bordered table-responsive-sm forecast"">
                                            <thead>
                                                <tr class=""table-primary"">
                                                    <th>№ поля</th>
                                                    <th>""ПР""<br />Прогноз<br />(т)</th>
                                                    <th>""У""<br />Урожайность<br />(ц/га)</th>
                                                    <th>""П""<br />Плошадь<br />(га)</th>
                                                    <th>""ОУ""<br />Ожидаемая урожайность <br />(мин-макс, т) </th>
                          ");
                WriteLiteral(@"                          <th>""ОП""<br />Оценка продуктивности<br /></th>
                                                </tr>
                                            </thead>
                                            <tbody class=""water1"">
                                                <tr>
                                                    <td>1</td>
                                                    <td>1.20</td>
                                                    <td>35-38</td>
                                                    <td>0.53</td>
                                                    <td>1.85-2.01</td>
                                                    <td><span class=""badge badge-danger"">64.4%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>2</td>
                                                    <td>1.00</td>
                               ");
                WriteLiteral(@"                     <td>32-35</td>
                                                    <td>0.39</td>
                                                    <td>1.25-1.37</td>
                                                    <td><span class=""badge badge-warning"">80.21%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>3</td>
                                                    <td>0.21</td>
                                                    <td>26-30</td>
                                                    <td>0.09</td>
                                                    <td>0.23-0.27</td>
                                                    <td><span class=""badge badge-warning"">87.61%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>4</td>
    ");
                WriteLiteral(@"                                                <td>0.21</td>
                                                    <td>30-32</td>
                                                    <td>0.09</td>
                                                    <td>0.27-0.29</td>
                                                    <td><span class=""badge badge-warning"">75.93%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>5</td>
                                                    <td>0.21</td>
                                                    <td>30-33</td>
                                                    <td>0.09</td>
                                                    <td>0.27-0.30</td>
                                                    <td><span class=""badge badge-warning"">77.04%</span></td>
                                                </tr>

                            ");
                WriteLiteral(@"                    <tr>
                                                    <td>6</td>
                                                    <td>0.29</td>
                                                    <td>20-25</td>
                                                    <td>0.09</td>
                                                    <td>0.2-0.23</td>
                                                    <td><span class=""badge badge-success"">126.67%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>7</td>
                                                    <td>0.22</td>
                                                    <td>30-32</td>
                                                    <td>0.09</td>
                                                    <td>0.27-0.29</td>
                                                    <td><span class=""badge badge-warning"">81.85%</spa");
                WriteLiteral(@"n></td>
                                                </tr>

                                                <tr>
                                                    <td>8</td>
                                                    <td>0.212</td>
                                                    <td>32-35</td>
                                                    <td>0.1</td>
                                                    <td>0.32-0.35</td>
                                                    <td><span class=""badge badge-danger"">66.25%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>9</td>
                                                    <td>0.25</td>
                                                    <td>33-35</td>
                                                    <td>0.1</td>
                                                    <td>0.33-0.35</td>
         ");
                WriteLiteral(@"                                           <td><span class=""badge badge-warning"">76.06%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>10</td>
                                                    <td>0.23</td>
                                                    <td>30-33</td>
                                                    <td>0.1</td>
                                                    <td>0.32-0.33</td>
                                                    <td><span class=""badge badge-warning"">72.19%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>11</td>
                                                    <td>0.20</td>
                                                    <td>35-38</td>
                                                    <");
                WriteLiteral(@"td>0.11</td>
                                                    <td>0.39-0.42</td>
                                                    <td><span class=""badge badge-danger"">51.43%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>12</td>
                                                    <td>0.28</td>
                                                    <td>27-30</td>
                                                    <td>0.11</td>
                                                    <td>0.30-0.33</td>
                                                    <td><span class=""badge badge-success"">95.30%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>13</td>
                                                    <td>2.683</td>
                         ");
                WriteLiteral(@"                           <td>37-40</td>
                                                    <td>1.03</td>
                                                    <td>3.81-4.12</td>
                                                    <td><span class=""badge badge-warning"">70.40%</span></td>
                                                </tr>

                                                <tr>
                                                    <td>14</td>
                                                    <td>1.03</td>
                                                    <td>30-34</td>
                                                    <td>0.49</td>
                                                    <td>1.47-1.66</td>
                                                    <td><span class=""badge badge-danger"">69.93%</span></td>
                                                </tr>

                                            </tbody>
                                        </table>

          ");
                WriteLiteral("                          </div>\r\n                                    <div class=\"col-5\">\r\n\r\n                                        <img");
                EndContext();
                BeginWriteAttribute("src", " src=", 68454, "", 68498, 1);
#line 1344 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\Home\Index.cshtml"
WriteAttributeValue("", 68459, Url.Content("../images/field_map.png"), 68459, 39, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(68498, 6915, true);
                WriteLiteral(@" style=""width:100%; border:2px solid gray; border-radius:5px; text-align:center;"" />

                                    </div>
                                </div>


                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закрыть</button>
                    </div>
                </div>
            </div>
        </div>

        <div id=""rubicon-data-modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=""true"">
            <div class=""modal-dialog modal-sm"">
                <div class=""modal-content"">
                    <div class=""modal-header bg-primary"">
                        <h5 class=""modal-title"">Sensor Data</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div id=""meteo-data-div"" class=""modal-body"">
                        <ul class=""list-group border-");
                WriteLiteral(@"x-0 rounded-0;"">
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Дата:</span>
                                <div id=""rdat1"" class=""ml-auto""></div>
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Id:</span>
                                <div id=""rdat2"" class=""ml-auto""></div>
                            </li>

                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Тип:</span>
                                <div id=""rdat3"" class=""ml-auto""></div>
                            </li>
                            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Уровен воды:</span>
                                <div id=""rdat4"" class=""ml-auto""></div>
                            </li>
                ");
                WriteLiteral(@"            <li class=""list-group-item"">
                                <span class=""font-weight-semibold"">Объем воды:</span>
                                <div id=""rdat5"" class=""ml-auto""></div>
                            </li>
                        </ul>
                        <div id=""sensorWaterExpenseDiv"">
                            <h5>общий обьём воды</h5>
                            <table class=""table text-center table-bordered table-sm"">
                                <thead>
                                    <tr class=""table-primary"">
                                        <th>№</th>
                                        <th>Дата</th>
                                        <th>Расход воды (м<sup>3</sup>)</th>
                                    </tr>
                                </thead>
                                <tbody class=""water1"">
                                    <tr>
                                        <td>1</td>
                                ");
                WriteLiteral(@"        <td>20.05.2022</td>
                                        <td>3672</td>
                                    </tr>
                                    <tr>
                                        <td>2</td>
                                        <td>15.06.2022</td>
                                        <td>3753</td>
                                    </tr>
                                    <tr>
                                        <td>3</td>
                                        <td>04.07.2022</td>
                                        <td>3832</td>
                                    </tr>

                                    <tr class=""table-primary"">
                                        <td colspan=""2"">Итого</td>
                                        <td>11257  м<sup>3</sup></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                    </div>
 ");
                WriteLiteral(@"                   <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закрыть</button>
                    </div>
                </div>
            </div>
        </div>

        <div id=""water-balance-modal"" class=""modal fade"" tabindex=""-1"" style=""display: none;"" aria-hidden=""true"">
            <div class=""modal-dialog modal-lg"">
                <div class=""modal-content"">
                    <div class=""modal-header bg-primary"">
                        <h5 class=""modal-title"">Соотношение ирригационной статистики</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
                    </div>
                    <div class=""modal-body"">
                        <table class=""table text-center table-bordered table-sm"">
                            <thead>
                                <tr class=""table-primary"">
                                    <th>№</th>
                        ");
                WriteLiteral(@"            <th><button type=""button"" class=""btn btn-outline-primary btn-sm"" onclick=""showItinary(1)"">20.05.2022</button></th>
                                    <th><button type=""button"" class=""btn btn-outline-primary btn-sm"" onclick=""showItinary(2)"">15.06.2022</button></th>
                                    <th><button type=""button"" class=""btn btn-outline-primary btn-sm"" onclick=""showItinary(3)"">03.08.2022</button></th>
                                </tr>
                            </thead>
                            <tbody class=""water1"">
                                <tr>
                                    <td>A - Rubicon 1</td>
                                    <td>19 094.40 м<sup>3</sup></td>
                                    <td>17 639.10 м<sup>3</sup></td>
                                    <td>16 086.00 м<sup>3</sup></td>
                                </tr>
                                <tr>
                                    <td>B - Rubicon 2</td>
                  ");
                WriteLiteral(@"                  <td>15 422.4 м<sup>3</sup></td>
                                    <td>13 886.1 м<sup>3</sup></td>
                                    <td>12 256 м<sup>3</sup></td>
                                </tr>
                                <tr>
                                    <td>C - Smart Sol. 1</td>
                                    <td>3672.00 м<sup>3</sup></td>
                                    <td>3753.00 м<sup>3</sup></td>
                                    <td>3830.00 м<sup>3</sup></td>
                                </tr>
                            </tbody>
                        </table>
                        <div style=""text-align:center; margin-top:25px;"">
                            <img id=""itinaryContainer""");
                EndContext();
                BeginWriteAttribute("src", " src=", 75413, "", 75465, 1);
#line 1471 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\Home\Index.cshtml"
WriteAttributeValue("", 75418, Url.Content("../images/wat_bal_itinary_1.png"), 75418, 47, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(75465, 383, true);
                WriteLiteral(@" style=""width:70%; height:100%; border:1px solid; border-radius:5px;"" />
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Закрыть</button>
                    </div>
                </div>
            </div>
        </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(75855, 2814, true);
            WriteLiteral(@"
</div>

<script>
    var indexPanelHeight = 320;
    var indexDronePanelHeight = 150;
    var _searchBackFunction;
    var visibleIndex = ""NDVI"";
    var visibleSource = ""Satellite"";
    var indexDates = null;
    var slider_handles;
    var sliderInitialized = false;



    // Grant CesiumJS access to your ion assets
    Cesium.Ion.defaultAccessToken = ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwMTk3NTc5NS00ZDBkLTQ0YjItOWMxYy1jYjIwNmU0MTAyYjQiLCJpZCI6MTAwNDU2LCJpYXQiOjE2NTc1MjM4NDh9.NRLSLU9Otv2HUCxF7w6WBNWsG5-492k43WOAPgkO0-M"";
    var viewer;
    var scene;
    var lastHeight;
    var chartObject = null;
    var indexLayer = null;
    var imageryLayer;
    var selectedFeature = null;
    var indexChartInitialized = false;
    var ekin_turi_ds = null;
    var ekin_turi_pol_ds = null;
    var kanalSource = null;
    var recSource = null;
    var rub1Id = ""rub1"";
    var rub2Id = ""rub2"";
    var meteo1Id = ""meteo1"";
    var trapID = ""trap"";
    var smartId = ""smart1"";
 ");
            WriteLiteral(@"   var kanalColor = null;
    var warningEntity = null;
    var fieldWarningLoc = [{ ""id"":1, ""x"":69.441357, ""y"":41.19013},
        { ""id"":2, ""x"":69.441363, ""y"":41.189452},
        { ""id"":3, ""x"":69.441508, ""y"":41.189512},
        { ""id"":4, ""x"":69.441592, ""y"":41.189476},
        { ""id"":5, ""x"":69.441799, ""y"":41.189061},
        { ""id"":6, ""x"":69.441863, ""y"":41.18908},
        { ""id"":7, ""x"":69.441924, ""y"":41.189105},
        { ""id"":8, ""x"":69.441818, ""y"":41.189645},
        { ""id"":9, ""x"":69.441896, ""y"":41.189609},
        { ""id"":10, ""x"":69.442118, ""y"":41.189157},
        { ""id"":11, ""x"":69.442048, ""y"":41.189578},
        { ""id"":12, ""x"":69.442248, ""y"":41.189202},
        { ""id"":13, ""x"":69.442445, ""y"":41.189694},
        { ""id"":14, ""x"":69.443133, ""y"":41.189315}];

    function initSlider() {
        if (sliderInitialized)
            return;

        slider_handles = document.getElementById('slider');
        noUiSlider.create(slider_handles, {
            start: [100],
            range: {
  ");
            WriteLiteral(@"              'min': [10],
                'max': [100]
            },
            direction: $('html').attr('dir') == 'rtl' ? 'rtl' : 'ltr'
        });

        // Display values
        var slider_handles_vals = [
            document.getElementById('noui-handles-lower-val'),
            document.getElementById('noui-handles-upper-val')
        ];
        slider_handles.noUiSlider.on('update', function (values, handle) {
            if (indexLayer)
                if (indexLayer != null)
                    indexLayer.alpha = values[handle] / 100;
        });

        sliderInitialized = true;
    }

    function setGraph(sourceStr, typeStr)
    {
        visibleSource = sourceStr;
        visibleIndex = typeStr;

        $.get('");
            EndContext();
            BeginContext(78670, 34, false);
#line 1564 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\Home\Index.cshtml"
          Write(Url.Action("GetIndexData", "Home"));

#line default
#line hidden
            EndContext();
            BeginContext(78704, 23961, true);
            WriteLiteral(@"', { idStr: selectedFeature.properties.fid.getValue(), source: sourceStr, type: typeStr }, function (data)
        {
            indexDates = data.IndexDates;
            if (!indexChartInitialized)
                indexChart.init(data.IndexDates, data.IndexData, data.IrrigationData, typeStr);
            else
                indexChart.setUpdate(data.IndexDates, data.IndexData, data.IrrigationData,typeStr);

            chartObject.resize();
        });
    }

    function showFeaturePanel() {

        if (selectedFeature != null) {
            $(""#col1"").text(selectedFeature.properties['Наименование сортов'].getValue());
            $(""#col2"").text(selectedFeature.properties['Название культуры'].getValue());
            $(""#col3"").text(selectedFeature.properties['Плошадь'].getValue() + "" га"");
            $(""#col4"").text(selectedFeature.properties['Дата посадки'].getValue());

            $(""#col5"").text(selectedFeature.properties['Пророст, дата '].getValue());
            $(""#col6"").ht");
            WriteLiteral(@"ml(selectedFeature.properties['Годовой объём полива'].getValue() + "" м<sup>3</sup>"");
            $(""#col23"").html(selectedFeature.properties['Объём полива'].getValue() + "" м<sup>3</sup>"");

            $(""#col7"").text(selectedFeature.properties['Количество поливов'].getValue() + "" раз"");
            $(""#col8"").text(selectedFeature.properties['Рост растения'].getValue());
            $(""#col9"").text(selectedFeature.properties['Период роста'].getValue());
            $(""#col10"").text(selectedFeature.properties['Урожайность'].getValue());

            $(""#col11"").text(selectedFeature.properties['Область'].getValue());
            $(""#col12"").text(selectedFeature.properties['Район'].getValue());
            $(""#col13"").text(selectedFeature.properties['Массив'].getValue());
            $(""#col14"").text(selectedFeature.properties['Кадастровый номер'].getValue());
            $(""#col15"").text(selectedFeature.properties['Фермер'].getValue());
            $(""#col16"").text(selectedFeature.properties['ИНН'");
            WriteLiteral(@"].getValue());

            $(""#col17"").text(selectedFeature.properties['Болбонитет'].getValue());
            $(""#col18"").html(selectedFeature.properties['Гумус'].getValue() + "" % <span class=\""badge badge-success\"">Выше нормы</span>"" );
            $(""#col19"").html(selectedFeature.properties['Фосфор'].getValue() + "" мг/кг <span class=\""badge badge-warning\"">Среднее значение</span>"");
            $(""#col20"").html(selectedFeature.properties['Калий'].getValue() + "" мг/кг <span class=\""badge badge-danger\"">Ниже нормы</span>"");



            var prog = parseFloat(selectedFeature.properties['Прогноз урожая'].getValue());

            $(""#col21"").text((prog.toFixed(2)) + "" т"");


            $(""#col22"").text((selectedFeature.properties['Прогноз урожая level'].getValue() * 100) + ""%"" );

            var norm = selectedFeature.properties['Урожайность'].getValue();

            var norm1 = parseInt(norm.substring(0, 2));
            var norm2 = parseInt(norm.substring(3, 5));

            var no");
            WriteLiteral(@"rm = norm.substring(0, 5)

            var area = parseFloat(selectedFeature.properties['Плошадь'].getValue());
            var prod = norm1 * area / 10;

            $(""#col31"").text(((norm1 * area / 10).toFixed(2) + ""-"" + (norm2 * area / 10).toFixed(2)) + "" т"");
            $(""#col32"").text((prog / prod * 100).toFixed(2) + ""%"");


            addWarning(selectedFeature.properties['fid'].getValue());
        };

        $(""#feature_panel"").css(""visibility"", ""visible"");

        $(""#feature_panel"").animate({
            width: 350
        }, {
            complete: function () {
                $(""#fast_search_panel"").css(""visibility"", ""hidden"");
            }
        });

        if ($(""#index_panel"").is("":visible""))
        {
            if (chartObject != null) {

                setGraph(visibleSource, visibleIndex);
                chartObject.resize();
            }
        }
    }

    function hideFeaturePanel() {
        $(""#fast_search_panel"").css(""visibility"", ""visi");
            WriteLiteral(@"ble"");

        $(""#feature_panel"").animate({
            width: 0
        }, {
            complete: function () {
                $(""#feature_panel"").css(""visibility"", ""hidden"");
                removeWarning();
            }
        });

        $(""#index_panel"").animate({
            height: 0
        }, {
            complete: function () {
                $(""#index_panel"").css(""visibility"", ""hidden"");

                hideIndexLayer();

            }
        });


    }

    function showIndexPanel() {

        if (visibleSource == ""UAV"") {
            $(""#sat_index_buttons"").addClass(""d-none"");
            $(""#uav_index_buttons"").removeClass(""d-none"");
        }
        else
        {
            $(""#sat_index_buttons"").removeClass(""d-none"");
            $(""#uav_index_buttons"").addClass(""d-none"");
        }

        $(""#index_panel"").css(""visibility"", ""visible"");
        $(""#index_panel"").animate({
            height: indexPanelHeight
        }, {
              ");
            WriteLiteral(@"  complete: function () {
                var wdth = ($(window).width() - 350) + ""px"";
                $(""#index_panel"").css(""width"", wdth);
                setGraph(visibleSource, visibleIndex);
            }
        });

    }

    function showDronePanel() {
        visibleIndex = ""NDVI"";
        visibleSource = ""UAV"";
        showIndexPanel();
    }

    function initializeViewer() {
        viewer = new Cesium.Viewer(""cesiumContainer"",
            {
                homeButton: false,
                infoBox: false,
                sceneModePicker: false,
                timeline: false,
                navigationHelpButton: false,
                navigationInstructionsInitiallyVisible: false,
                geocoder: true,
                fullscreenButton: true,
                selectionIndicator: false,
                baseLayerPicker: true,
                animation: false,

                //terrainProvider: Cesium.createWorldTerrain()
                //imageryProvider:");
            WriteLiteral(@" new Cesium.BingMapsImageryProvider({
                //    url: 'https://dev.virtualearth.net',
                //    key: 'Ah9rE6c78PyF5j7JfLNl2x1bM6Op_4hg9LOnYnMoYUaLAmRz0k0-lkv9PjT7GHtv',
                //    mapStyle: Cesium.BingMapsStyle.AERIAL)}
                //
            });
        viewer.allowDataSourcesToSuspendAnimation = true;

        scene = viewer.scene;

        var waterReport = viewer.entities.add({
            position: Cesium.Cartesian3.fromDegrees(69.4417180, 41.1879775),
            billboard: {
                image: '../images/info.png',
                width: 32,
                height: 32
            }, name: ""water_report""
        });

        viewer.scene.preRender.addEventListener(function () {

            var camera = scene.camera;

            var height = camera.positionCartographic.height;

            if (lastHeight !== height) {
                lastHeight = height;
                if (warningEntity)
                    if (warningEntity != ");
            WriteLiteral(@"null) {
                        warningEntity.show = height < 500;
                    }
                waterReport.show = height < 500;
            }
        });

        imageryLayer = viewer.imageryLayers.addImageryProvider(
            new Cesium.IonImageryProvider({ assetId: 1190599 })
        );

        viewer.imageryLayers.addImageryProvider(
            new Cesium.IonImageryProvider({ assetId: 1196986 })
        );

        var handler = new Cesium.ScreenSpaceEventHandler(viewer.canvas);
        handler.setInputAction(onClick, Cesium.ScreenSpaceEventType.LEFT_CLICK);

        viewer.cesiumWidget.creditContainer.innerHTML = """";
    }

    function addWarning(fieldNo) {
        removeWarning(fieldNo);

        var recFileUrl = ""../data/rec_"" + fieldNo + "".geojson"";

        $.ajax({
            url: recFileUrl,
            type: 'HEAD',
            error: function () {
                recSource = null;
            },
            success: function () {
                v");
            WriteLiteral(@"ar promise2 = Cesium.GeoJsonDataSource.load(
                    recFileUrl, {
                    fill: Cesium.Color.RED.withAlpha(0.40)
                }
                );

                promise2.then(function (dataSource) {
                    viewer.dataSources.add(dataSource);
                    recSource = dataSource;
                });
            }
        });


        var warningLoc = fieldWarningLoc[fieldNo-1];

        var entityName = fieldNo ;

        if (fieldNo == 1 || fieldNo == 5 || fieldNo == 6 || fieldNo == 7 || fieldNo == 10 || fieldNo == 12 || fieldNo == 14)
            entityName = ""pesticide"";

        warningEntity = viewer.entities.add({
            position: Cesium.Cartesian3.fromDegrees(warningLoc.x, warningLoc.y),
            billboard: {
                image: '../images/warning.png',
                width: 32,
                height: 32
            },
            name: entityName
        });


    }

    function removeWarning() {
       ");
            WriteLiteral(@" if (warningEntity)
            if (warningEntity != null)
                viewer.entities.remove(warningEntity);

        if (recSource)
            if (recSource != null)
                viewer.dataSources.remove(recSource, true);
    }

    function loadDataSources() {
        // ekin turi line
        var promise1 = Cesium.GeoJsonDataSource.load(
            ""../data/ekin_turi.geojson"", {
            stroke: Cesium.Color.RED,
            strokeWidth: 3,
            clampToGround: true
        }
        );
        promise1.then(function (dataSource) {
            viewer.dataSources.add(dataSource);
            ekin_turi_ds = dataSource;
        });

        // ekin turi poligon
        var promise2 = Cesium.GeoJsonDataSource.load(
            ""../data/ekin_turi_pol.geojson"", {
            fill: Cesium.Color.RED.withAlpha(0.0)
        }
        );

        promise2.then(function (dataSource) {
            viewer.dataSources.add(dataSource);
            ekin_turi_pol_ds = data");
            WriteLiteral(@"Source;
        });

        kanalColor = new Cesium.Color.fromCssColorString('#6498d2');
        kanalColor.alpha = 0.7;

        var promise3 = Cesium.GeoJsonDataSource.load(
            ""../data/kanal.geojson"", {
                stroke: kanalColor,
            strokeWidth: 10,
            clampToGround: true,
        }
        );

        promise3.then(function (dataSource) {
            viewer.dataSources.add(dataSource);
            kanalSource = dataSource;
        });

        var color1 = new Cesium.Color.fromCssColorString('#ac5b31');
        color1.alpha = 0.3;

        const kollektorSource = Cesium.GeoJsonDataSource.load(
            ""../data/kolektor.geojson"", {
            stroke: color1,
            strokeWidth: 8,
            clampToGround: true
        }
        );
        viewer.dataSources.add(kollektorSource);

    }

    function add3dModels() {


        var url1 = ""../data/solar1.glb"";
        var url2 = ""../data/solar2.glb"";
        var url3 = ""../");
            WriteLiteral(@"data/meteo.glb"";
        var url4 = ""../data/trap.glb"";
        var url5 = ""../data/solar3.glb"";

        var height = 0; //390
        var posrub1 = Cesium.Cartesian3.fromDegrees(69.4417920, 41.1879823, height);
        var posrub2 = Cesium.Cartesian3.fromDegrees(69.4416890, 41.1879639, height);
        var possmart = Cesium.Cartesian3.fromDegrees(69.4417120, 41.1879916, height);
        var posmeteo = Cesium.Cartesian3.fromDegrees(69.441728, 41.188166, height);
        var postrap = Cesium.Cartesian3.fromDegrees(69.441991, 41.188217, height);

        createModel(url1, posrub1, rub1Id, 1);
        createModel(url2, posrub2, rub2Id, 1);
        createModel(url3, posmeteo, meteo1Id, 0.25);
        createModel(url4, postrap, trapID, 1);
        createModel(url5, possmart, smartId, 1);

        Cesium.GeoJsonDataSource.clampToGround = true;
    }

    function onClick(click) {

        var entities = ekin_turi_ds.entities.values;
        var kanalEntities = kanalSource.entities.values;
");
            WriteLiteral(@"
        var picked = viewer.scene.pick(click.position);

        if (picked) {
            var entity = Cesium.defaultValue(picked.id, picked.primitive.id);

            if (entity instanceof Cesium.Entity) {
                if (entity.billboard) {
                    if (entity.name == ""pesticide"")
                        $('#farmer-recommendations-modal').modal('show');
                    else if (entity.name == ""water_report"")
                        $('#water-balance-modal').modal('show');
                    else
                        $('#analysis-modal').modal('show');
                    return;
                }
            }
        }


        for (var i = 0; i < entities.length; i++) {
            if (entities[i].polyline)
                entities[i].polyline.material = Cesium.Color.RED;
        }

        for (var i = 0; i < kanalEntities.length; i++) {
            if (kanalEntities[i].polyline)
                kanalEntities[i].polyline.material = kanalColor;
       ");
            WriteLiteral(@" }

        var selection = false;
        selectedFeature = null;

        if (picked) {
            var entity = Cesium.defaultValue(picked.id, picked.primitive.id);

            if (entity instanceof Cesium.Entity) {

                if (entity.properties)
                {
                    var id = entity.properties.fid;
                    selectedFeature = entity;
                    var polylines = ekin_turi_ds.entities.values;
                    for (var i = 0; i < polylines.length; i++) {
                        if (polylines[i].properties.fid.getValue() == id) {
                            polylines[i].polyline.material = Cesium.Color.YELLOW;
                            selection = true;

                            break;
                        }
                    }
                }

                if (entity.name) {
                    if (entity.name == meteo1Id) {
                        getMeteoInfo();
                    }

                    if (entity.");
            WriteLiteral(@"name == rub1Id) {
                        getRubiconData(""1"");
                    }

                    if (entity.name == rub2Id) {
                        getRubiconData(""2"");
                    }

                    if (entity.name == smartId) {
                        getSmartSolData();
                    }
                }

                if (entity.polyline)
                {
                    if (entity.properties._fid.getValue() == 156) {
                        entity.polyline.material = Cesium.Color.YELLOW;
                        gotoDemoArea(1.0);
                        setTimeout(function () {
                            $('#water-consump-modal').modal('show');
                        }, 2000);
                    }

                }

            }


        };

        if (selection == true)
            showFeaturePanel();
        else
            hideFeaturePanel();
    }

    function gotoDemoArea(time) {
        if (time == undefined)
         ");
            WriteLiteral(@"   time = 4.0;

        viewer.flyTo(imageryLayer, {
            duration: time,
            maximumHeight: 150,
            offset: new Cesium.HeadingPitchRange(Cesium.Math.toRadians(90),
                Cesium.Math.toRadians(-25), 1200)
        });
    }

    var indexChart = function () {


        //
        // Setup module components
        //

        // Line chart with zoom
        var _indexChartInit = function (dates,data,irrData,caption) {
            if (typeof echarts == 'undefined') {
                console.warn('Warning - echarts.min.js is not loaded.');
                return;
            }

            // Define element
            var line_zoom_element = document.getElementById('line_zoom');

            //
            // Charts configuration
            //

            if (line_zoom_element) {

                // Initialize chart
                var line_zoom = echarts.init(line_zoom_element);
                chartObject = line_zoom;

                //");
            WriteLiteral(@"
                // Chart config
                //

                // Options
                line_zoom.setOption({

                    // Define colors
                    color: [""#AED581"", ""#E57373"", '#4FC3F7'],

                    // Global text styles
                    textStyle: {
                        fontFamily: 'Roboto, Arial, Verdana, sans-serif',
                        fontSize: 13
                    },

                    // Chart animation duration
                    animationDuration: 750,

                    // Setup grid
                    grid: {
                        left: 0,
                        right: 40,
                        top: 35,
                        bottom: 60,
                        containLabel: true
                    },

                    // Add legend
                    legend: {
                        data: [caption],
                        itemHeight: 8,
                        itemGap: 20,
                      ");
            WriteLiteral(@"  textStyle: {
                            color: '#fff'
                        }
                    },

                    // Add tooltip
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross',
                            label: {
                                backgroundColor: '#6a7985'
                            }
                        },
                        formatter: function (params) {
                            var indexText = ""<b>"" + params[0].name + ""</b></br>"" + params[0].seriesName + "" : "" + params[0].data;
                            if (params[1].data == 1)
                                return indexText + ""</br>Irrigation : Yes"";
                            return indexText + ""</br>Irrigation : No"";
                        }
                    },

                    // Horizontal axis
                    xAxis: [{
                        type: 'category',
    ");
            WriteLiteral(@"                    boundaryGap: false,
                        axisLabel: {
                            color: '#fff'
                        },
                        axisLine: {
                            lineStyle: {
                                color: 'rgba(255,255,255,0.25)'
                            }
                        },
                        data: dates
                    }],

                    // Vertical axis
                    yAxis: [{
                        type: 'value',
                        axisLabel: {
                            formatter: '{value} ',
                            color: '#fff'
                        },
                        axisLine: {
                            lineStyle: {
                                color: 'rgba(255,255,255,0.25)'
                            }
                        },
                        splitLine: {
                            lineStyle: {
                                color: 'rgba(255,255,2");
            WriteLiteral(@"55,0.1)'
                            }
                        },
                        splitArea: {
                            show: true,
                            areaStyle: {
                                color: ['rgba(255,255,255,0.01)', 'rgba(0,0,0,0.01)']
                            }
                        }
                    }
                    ],

                    // Axis pointer
                    axisPointer: [{
                        lineStyle: {
                            color: 'rgba(255,255,255,0.25)'
                        }
                    }],

                    // Zoom control
                    dataZoom: [
                        {
                            type: 'inside',
                            start: 0,
                            end: 100
                        },
                        {
                            show: true,
                            type: 'slider',
                            start: 0,
              ");
            WriteLiteral(@"              end: 100,
                            height: 40,
                            bottom: 0,
                            borderColor: 'rgba(255,255,255,0.1)',
                            fillerColor: 'rgba(0,0,0,0.1)',
                            handleStyle: {
                                color: '#585f63'
                            },
                            textStyle: {
                                color: '#fff'
                            },
                            handleStyle: {
                                color: '#8893a9'
                            },
                            dataBackground: {
                                areaStyle: {
                                    color: 'rgba(0,0,0,0.5)'
                                }
                            }
                        }
                    ],

                    // Add series
                    series: [
                        {
                            name: caption,
      ");
            WriteLiteral(@"                      type: 'line',
                            smooth: true,
                            showSymbol: false,
                            itemStyle: {
                                normal: {
                                    borderWidth: 2
                                }
                            },
                            data: data
                        },
                        {
                            name: 'Irrigation',
                            smooth: true,
                            showSymbol: false,
                            type: 'bar',
                            showBackground: true,
                            itemStyle: {
                                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                                    { offset: 0, color: '#83bff6' },
                                    { offset: 0.5, color: '#188df0' },
                                    { offset: 1, color: '#188df0' }
                      ");
            WriteLiteral(@"          ])
                            },
                            emphasis: {
                                itemStyle: {
                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                                        { offset: 0, color: '#2378f7' },
                                        { offset: 0.7, color: '#2378f7' },
                                        { offset: 1, color: '#83bff6' }
                                    ])
                                }
                            },
                            data: irrData

                        }
                    ],

                    markLine: {
                        data: [{
                            name: 'My label11',
                            xAxis: '12.5.2022',
                            label: {
                                formatter: '{b}',
                                position: 'insideMiddleTop',
                                fontWeight: 'bold',
 ");
            WriteLiteral(@"                               fontSize: 15,
                                fontFamily: 'Helvetica',
                            }
                        }]
                    }


                });
            }


            //
            // Resize charts
            //
            chartObject.resize();

            chartObject.on('click', function (params) {
                $.get('");
            EndContext();
            BeginContext(102666, 33, false);
#line 2249 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\Home\Index.cshtml"
                  Write(Url.Action("GetIonIndex", "Home"));

#line default
#line hidden
            EndContext();
            BeginContext(102699, 11408, true);
            WriteLiteral(@"', { source: visibleSource, type: visibleIndex, dataIndex:params.dataIndex }, function (data)
                {
                    var source = visibleSource == ""Satellite"" ? ""Спутник "" : ""БПЛА "";
                    showIndexLayer(source + ""-"" + visibleIndex + "" / "" + indexDates[params.dataIndex], visibleIndex, data);
                });
            });

            // Resize function
            var triggerChartResize = function () {
                line_zoom_element && line_zoom.resize();
            };

            // On sidebar width change
            var sidebarToggle = document.querySelectorAll('.sidebar-control');
            if (sidebarToggle) {
                sidebarToggle.forEach(function (togglers) {
                    togglers.addEventListener('click', triggerChartResize);
                });
            }

            // On window resize
            var resizeCharts;
            window.addEventListener('resize', function () {
                clearTimeout(resizeCharts);");
            WriteLiteral(@"
                resizeCharts = setTimeout(function () {
                    triggerChartResize();
                }, 200);
            });

            indexChartInitialized = true;
        };


        //
        // Return objects assigned to module
        //
        return {
            init: function (dates,data, irrData, caption) {
                _indexChartInit(dates, data, irrData, caption);

            },

            setUpdate: function (dates, data, irrData, caption) {


                var options = {

                    // Define colors
                    color: [""#AED581"", ""#E57373"", '#4FC3F7'],

                    // Global text styles
                    textStyle: {
                        fontFamily: 'Roboto, Arial, Verdana, sans-serif',
                        fontSize: 13
                    },

                    // Chart animation duration
                    animationDuration: 750,

                    // Setup grid
                    grid: {");
            WriteLiteral(@"
                        left: 0,
                        right: 40,
                        top: 35,
                        bottom: 60,
                        containLabel: true
                    },

                    // Add legend
                    legend: {
                        data: [caption],
                        itemHeight: 8,
                        itemGap: 20,
                        textStyle: {
                            color: '#fff'
                        }
                    },

                    // Add tooltip
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross',
                            label: {
                                backgroundColor: '#6a7985'
                            }
                        }
                    },

                    // Horizontal axis
                    xAxis: [{
                        type: 'category',
  ");
            WriteLiteral(@"                      boundaryGap: false,
                        axisLabel: {
                            color: '#fff'
                        },
                        axisLine: {
                            lineStyle: {
                                color: 'rgba(255,255,255,0.25)'
                            }
                        },
                        data: dates
                    }
                    ],

                    // Vertical axis
                    yAxis: [{
                        type: 'value',
                        axisLabel: {
                            formatter: '{value} ',
                            color: '#fff'
                        },
                        axisLine: {
                            lineStyle: {
                                color: 'rgba(255,255,255,0.25)'
                            }
                        },
                        splitLine: {
                            lineStyle: {
                              ");
            WriteLiteral(@"  color: 'rgba(255,255,255,0.1)'
                            }
                        },
                        splitArea: {
                            show: true,
                            areaStyle: {
                                color: ['rgba(255,255,255,0.01)', 'rgba(0,0,0,0.01)']
                            }
                        }
                    }


                    ],

                    // Axis pointer
                    axisPointer: [{
                        lineStyle: {
                            color: 'rgba(255,255,255,0.25)'
                        }
                    }],

                    // Zoom control
                    dataZoom: [
                        {
                            type: 'inside',
                            start: 0,
                            end: 100
                        },
                        {
                            show: true,
                            type: 'slider',
                         ");
            WriteLiteral(@"   start: 0,
                            end: 100,
                            height: 40,
                            bottom: 0,
                            borderColor: 'rgba(255,255,255,0.1)',
                            fillerColor: 'rgba(0,0,0,0.1)',
                            handleStyle: {
                                color: '#585f63'
                            },
                            textStyle: {
                                color: '#fff'
                            },
                            handleStyle: {
                                color: '#8893a9'
                            },
                            dataBackground: {
                                areaStyle: {
                                    color: 'rgba(0,0,0,0.5)'
                                }
                            }
                        }
                    ],

                    // Add series
                    series: [
                        {
                      ");
            WriteLiteral(@"      name: caption,
                            type: 'line',
                            smooth: true,
                            showSymbol: false,
                            itemStyle: {
                                normal: {
                                    borderWidth: 2
                                }
                            },
                            data: data,
                        }
                        ,
                        {
                            name: 'Irrigation',
                            smooth: true,
                            showSymbol: false,
                            type: 'bar',
                            showBackground: true,
                            itemStyle: {
                                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                                    { offset: 0, color: '#83bff6' },
                                    { offset: 0.5, color: '#188df0' },
                                    ");
            WriteLiteral(@"{ offset: 1, color: '#188df0' }
                                ])
                            },
                            emphasis: {
                                itemStyle: {
                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                                        { offset: 0, color: '#2378f7' },
                                        { offset: 0.7, color: '#2378f7' },
                                        { offset: 1, color: '#83bff6' }
                                    ])
                                }
                            },
                            data: irrData
                        }
                    ]
                };
                chartObject.setOption(options);
            }

        }
    }();

    function showIndexLayer(caption,visibleIndex, ionId)
    {
        if (indexLayer)
            if (indexLayer != null)
                viewer.imageryLayers.remove(indexLayer, true);

        indexLayer");
            WriteLiteral(@" = viewer.imageryLayers.addImageryProvider(
            new Cesium.IonImageryProvider({ assetId: ionId })
        );

        indexLayer.alpha = 1;

        $(""#index_header_panel"").css(""visibility"", ""visible"");
        $(""#index_header"").text(caption);

        if (visibleSource == ""Satellite"") {

            if (visibleIndex == ""NDVI"") {
                $('#legand_image').attr('src', '/images/ndvi_legend.png');
                $(""#index_header_panel"").css(""height"", ""200px"");
                $(""#index_header_panel"").css(""width"", ""260px"");

            }

            if (visibleIndex == ""NDMI"") {
                $('#legand_image').attr('src', '/images/ndmi_legend.png');
                $(""#index_header_panel"").css(""height"", ""200px"");
                $(""#index_header_panel"").css(""width"", ""350px"");
            }

            if (visibleIndex == ""EVI"") {
                $('#legand_image').attr('src', '/images/evi_legend.png');
                $(""#index_header_panel"").css(""height"", ""90px");
            WriteLiteral(@""");
                $(""#index_header_panel"").css(""width"", ""260px"");
            }

            if (visibleIndex == ""NDWI"") {
                $('#legand_image').attr('src', '/images/ndwi_legend.png');
                $(""#index_header_panel"").css(""height"", ""160px"");
                $(""#index_header_panel"").css(""width"", ""260px"");
            }
            if (visibleIndex == ""SAVI"") {
                $('#legand_image').attr('src', '/images/ndvi_legend.png');
                $(""#index_header_panel"").css(""height"", ""200px"");
                $(""#index_header_panel"").css(""width"", ""260px"");
            }
        }
        else {

            if (visibleIndex == ""CIGREEN"")
                $('#legand_image').attr('src', '/images/cigreen_legend.png');

            if (visibleIndex == ""CVI"")
                $('#legand_image').attr('src', '/images/cvi_legend.png');

            if (visibleIndex == ""NDRE"")
                $('#legand_image').attr('src', '/images/cigreen_legend.png');

            if");
            WriteLiteral(@" (visibleIndex == ""DSWI"")
                $('#legand_image').attr('src', '/images/dswi_legend.png');

            if (visibleIndex == ""GNDVI"")
                $('#legand_image').attr('src', '/images/gndvi_legend.png');

            if (visibleIndex == ""NDVI"")
                $('#legand_image').attr('src', '/images/gndvi_legend.png');

            if (visibleIndex == ""REECL"")
                $('#legand_image').attr('src', '/images/gndvi_legend.png');

        }



        initSlider();
        slider_handles.noUiSlider.set(100);
    }

    function hideIndexLayer()
    {
        if (indexLayer)
            if (indexLayer != null)
                viewer.imageryLayers.remove(indexLayer, true);

        visibleIndex = ""NDVI"";
        $(""#index_header_panel"").css(""visibility"", ""hidden"");

        indexLayer = null;
    }

    function createModel(url, position,id,scale) {
        viewer.entities.add({
            name: id,
            position: position,
            model: {
  ");
            WriteLiteral("              uri: url,\r\n                scale:scale\r\n            },\r\n        });\r\n    }\r\n\r\n    function getMeteoInfo()\r\n    {\r\n         $.get(\'");
            EndContext();
            BeginContext(114108, 34, false);
#line 2572 "D:\Projeler\BEPRO.AKIS\AKIS_DEMO\Views\Home\Index.cshtml"
           Write(Url.Action("GetMeteoData", "Home"));

#line default
#line hidden
            EndContext();
            BeginContext(114142, 17107, true);
            WriteLiteral(@"', {  }, function (data1)
         {
             const data = JSON.parse(data1);

             $(""#dat1"").text(data.datetime);
             $(""#dat2"").text(data.temp);
             $(""#dat3"").text(data.humidity);
             $(""#dat4"").text(data.current_pressure);
             $(""#dat5"").text(data.dew_point);
             $(""#dat6"").text(data.precipitation);
             $(""#dat7"").text(data.wind_speed);
             $(""#dat8"").text(data.Moisture10);
             $(""#dat9"").text(data.Moisture20);
             $(""#dat10"").text(data.Moisture30);
             $(""#dat11"").text(data.Temp10);
             $(""#dat12"").text(data.Temp20);
             $(""#dat13"").text(data.Temp30);

             $('#meteo-data-modal').modal('show');
        });
    }

    function getRubiconData(sensorId)
    {
        $(""#rdat1"").text(Date.now());
        $(""#rdat2"").text('');
        $(""#rdat3"").text(sensorId);
        $(""#rdat4"").text(0.95);
        $(""#rdat5"").text(0.3);
        $(""#sensorWaterExpens");
            WriteLiteral(@"eDiv"").show();

        $('#rubicon-data-modal').modal('show');

         //$.ajax({
         //    headers: { ""Accept"": ""application/json"" },
         //    type: 'GET',
         //    url: 'https://map.agro.uz/akis/water/get_last?type=rubicon&rubicon_id=' + sensorId,
         //    crossDomain: true,
         //    beforeSend: function (xhr) {
         //        xhr.withCredentials = true;
         //    },
         //    success: function (data1, textStatus, request) {

         //        $(""#rdat1"").text(data1.datetime);
         //        $(""#rdat2"").text(data1.rubicon_id);
         //        $(""#rdat3"").text(data1.type);
         //        $(""#rdat4"").text(data1.water_level);
         //        $(""#rdat5"").text(data1.water_volume);
         //        $(""#sensorWaterExpenseDiv"").hide();



         //        $('#rubicon-data-modal').modal('show');
         //    }
         //})
    }

    function getSmartSolData(sensorId) {


        $(""#rdat1"").text(Date.now());
        ");
            WriteLiteral(@"$(""#rdat2"").text('');
        $(""#rdat3"").text(""smart_solution"");
        $(""#rdat4"").text(0);
        $(""#rdat5"").text(0);
        $(""#sensorWaterExpenseDiv"").show();

        $('#rubicon-data-modal').modal('show');


        //$.ajax({
        //    headers: { ""Accept"": ""application/json"" },
        //    type: 'GET',
        //    url: 'https://map.agro.uz/akis/water/get_last?type=smart_solution' ,
        //    crossDomain: true,
        //    beforeSend: function (xhr) {
        //        xhr.withCredentials = true;
        //    },
        //    success: function (data1, textStatus, request) {

        //        $(""#rdat1"").text(data1.datetime);
        //        $(""#rdat2"").text(data1.rubicon_id);
        //        $(""#rdat3"").text(data1.type);
        //        $(""#rdat4"").text(data1.water_level);
        //        $(""#rdat5"").text(data1.water_volume);
        //        $(""#sensorWaterExpenseDiv"").show();

        //        $('#rubicon-data-modal').modal('show');
        // ");
            WriteLiteral(@"   }
        //})
    }

    function showIndexInfo()
    {
        if (visibleIndex == ""NDVI"")
        {
            $(""#index_info_header"").text(""Normalized Difference Vegetation Index (NDVI)"");
            $(""#index_info_body"").html(""Нормализованный разностный индекс растительности (NDVI). Это стандартизированный индекс, позволяющий создавать изображение, отображающее растительность(относительную биомассу).В этом индексе используется преимущество контраста характеристик двух каналов из мультиспектрального набора растровых данных — поглощения пигмента хлорофилла в красной полосе и высокой отражательной способности растительных материалов в ближней инфракрасной(БИК) полосе.</br></br>NDVI = ((NIR - красный) / (NIR + красный))"");
        }

        if (visibleIndex == ""NDMI"") {
            $(""#index_info_header"").text(""Normalized Difference Moisture Index (NDMI)"");
            $(""#index_info_body"").html(""Нормализованный индекс разности влажности (NDMI) чувствителен к уровню влажности растительнос");
            WriteLiteral(@"ти. Он используется для мониторинга засухи и уровня топлива в пожароопасных районах. Он использует диапазоны NIR и SWIR для создания соотношения, предназначенного для смягчения освещения и атмосферных эффектов.</br></br>NDMI = (NIR - SWIR1) / (NIR + SWIR1)"");
        }

        if (visibleIndex == ""NDWI"") {
            $(""#index_info_header"").text(""Normalized Difference Water Index (NDWI)"");
            $(""#index_info_body"").html(""Вычисление NDWI является варьируется от -1 до +1 и зависит от содержания воды в листьях, а также от типа растительности и покрова. Высокие значения NDWI (синий цвет) соответствуют высокому содержанию воды в растительности и высокой доли растительного покрова.  Низкие значения NDWI (белый цвет) соответствуют низкому содержанию влаги в растительности и низкому покрытию доли растительности. В период водного стресса NDWI будет уменьшаться"");
        }

        if (visibleIndex == ""SAVI"") {
            $(""#index_info_header"").text(""The Soil-Adjusted Vegetation Index (SAVI)"");
 ");
            WriteLiteral(@"           $(""#index_info_body"").html(""Индекс растительности с поправк ой на почву (SAVI). Это индекс растительности, который пытается свести к минимуму влияние яркости почвы с помощью поправочного коэффициента яркости почвы. Это часто используется в засушливых регионах, где растительный пок ров низкий.</br></br>SAVI = ((NIR - красный) / (NIR + красный + L)) x (1 + L)"");
        }

        if (visibleIndex == ""CLRE"") {
            $(""#index_info_header"").text(""The Chlorophyll Index - Red-Edge (Clre)"");
            $(""#index_info_body"").html(""Индекс хлорофилла — красная кромка (Clre). Это вегетационный индекс для оценки содержания хлорофилла в листьях с использованием соотношения коэффициентов отражения в ближнем инфракрасном (БИК) и красном диапазонах.</br ></br > SAVI = CLRE = [(NIR / RedEdge) - 1]"");
        }

        if (visibleIndex == ""EVI"") {
            $(""#index_info_header"").text(""The Enhanced Vegetation Index(EVI)"");
            $(""#index_info_body"").html(""Метод расширенного вегетационног");
            WriteLiteral(@"о индекса(EVI) представляет собой оптимизированный вегетационный индекс, учитывающий атмосферные влияния и фоновый сигнал растительности.Он похож на NDVI, но менее чувствителен к фоновому и атмосферному шуму и не становится таким насыщенным, как NDVI, при просмотре участков с очень густой зеленой растительностью.</br></br>EVI = 2, 5 * (NIR - красный) / (NIR + 6 * красный - 7, 5 * синий + 1)"");
        }

        if (visibleIndex == ""RTVI"") {
            $(""#index_info_header"").text(""Red-Edge Triangulated Vegetation Index (RTVI)"");
            $(""#index_info_body"").html(""индекс растительности с красным краем (RTVICore) — это индекс растительности для оценки листовой поверхности и биомассы. Этот индекс использует коэффициент отражения в ближней инфракрасной области спектра, дальнем красном и зеленом спектре.</br></br>RTVICore = (100(NIR-RedEdge)-10(NIR-Green))"");
        }


        if (visibleIndex == ""MRESR"") {
            $(""#index_info_header"").text(""Modified Red Edge Simple Ratio (MRESR)"");
    ");
            WriteLiteral(@"        $(""#index_info_body"").html(""Этот индекс является модификацией простого коэффициента широкополосной(SR).Он использует полосы на красной кромке и включает поправк у на зеркальное отражение листа.Приложения включают в себя тип земледелие, мониторинг леса и обнаружение нагрузки на растительность.</br ></br >((NIR / RedEdge) - 1) / (((NIR / RedEdge) + 1))"");
        }

        if (visibleIndex == ""NDRE"") {
            $(""#index_info_header"").text(""Normalized Difference Red-Edge Index (NDRE)"");
            $(""#index_info_body"").html(""Нормализованный разностный индекс красного края. Cлужит для определения концентрации азота в листьях путём оценки активности фотосинтеза. Используется главным образом при исследовании старых и находящихся в неудовлетворительном состоянии посевов</br ></br >NDRE = - (RedEdge)/(NIR + Red.Edge)"");
        }

        if (visibleIndex == ""GNDVI"") {
            $(""#index_info_header"").text(""The Green Normalized Difference Vegetation Index (GNDVI)"");
            $(""#index_in");
            WriteLiteral(@"fo_body"").html(""Это индекс растительности для оценки активности фотосинтеза,  используется для оценки потребления растениями воды и удобрений</br ></br >GNDVI = (NIR – green) / (NIR + green)"");
        }

        if (visibleIndex == ""DSWI"") {
            $(""#index_info_header"").text(""Disease Water Stress Index (DSWI)"");
            $(""#index_info_body"").html(""Индекс водного стресса DSWI ,был разработан с помощью  программы автоматического создания оптимальных спектральных индексов (Facility for the Automatic Creation of Optimal Spectral Indices - FACOSI). Индекс влагосодержания показывает, во-первых, достаточное содержание влаги в растениях, и во-вторых, равномерное распределение влаги по делянке..</br ></br >DSWI=GREEN/RED"");
        }

        if (visibleIndex == ""CVI"") {
            $(""#index_info_header"").text(""Chloropyhll Vegetation Index (CVI)"");
            $(""#index_info_body"").html(""Вегетационный индекс хлорофилла. Имеет повышенную чувствительность к содержанию хлорофилла в лиственном покро");
            WriteLiteral(@"ве. Используется с начала и до середины цикла роста культур для широкого диапазона почв и условий посева путем анализа большого набора синтетических данных, полученных с использованием модели отражения листовой поверхности</br ></br >CVI=(NIR/ green) * (RED/green)"");
        }

        if (visibleIndex == ""CIGREEN"") {
            $(""#index_info_header"").text(""Chloropyhll Index Green (CIGREEN)"");
            $(""#index_info_body"").html(""Данный индекс используется для оценки содержания хлорофилла в листьях. Также этот индекс указывает на фенологические стадии вегетационного развития.</br ></br >CIGREEN = (NIR/GREEN)-1"");
        }

        if (visibleIndex == ""RECL"") {
            $(""#index_info_header"").text(""Red Edge Chloropyhll Index (RECL)"");
            $(""#index_info_body"").html(""Хлорофильный Red Edge Индекс. Вегетационный индекс ReCl хорошо улавливает содержание хлорофилла в листьях, который образуется в результате поглощения растениями азота.ReCl показывает фотосинтетическую активность вегетаци");
            WriteLiteral(@"онного покрова..</br ></br >ReCl = (NIR / RED) – 1"");
        }

        $('#index_info_modal').modal('show');
    }

    function onAnalysisModalShown() {
        var header = """";
        var body = """";

        if (selectedFeature)
            if (selectedFeature != null) {

                if (selectedFeature.properties.fid.getValue() == 2) {
                    header = ""Поле №1"";
                    $(""#analysis-body1"").load(""html/first_field.html"")
                   // $(""#analysis-body1"").load(""html/gauge-grade.html"")
                }

                if (selectedFeature.properties.fid.getValue() == 3) {
                    header = ""Поле №2"";
                    $(""#analysis-body1"").load(""html/second_field.html"")
                }

                if (selectedFeature.properties.fid.getValue() == 4) {
                    header = ""Поле №3"";
                    $(""#analysis-body1"").load(""html/third_field.html"")
                }

                if (selectedFeature.propert");
            WriteLiteral(@"ies.fid.getValue() == 5) {
                    header = ""Поле №4"";
                    $(""#analysis-body1"").load(""html/fourth_field.html"");
                }

                if (selectedFeature.properties.fid.getValue() == 6) {
                    header = ""Поле №5"";
                    $(""#analysis-body1"").load(""html/fifth_field.html"");
                }

                if (selectedFeature.properties.fid.getValue() == 7) {
                    header = ""Поле №6"";
                    $(""#analysis-body1"").load(""html/sixth_field.html"");
                }

                if (selectedFeature.properties.fid.getValue() == 8) {
                    header = ""Поле №7"";
                    $(""#analysis-body1"").load(""html/seventh_field.html"");
                }

                if (selectedFeature.properties.fid.getValue() == 9) {
                    header = ""Поле №8"";
                    $(""#analysis-body1"").load(""html/eight_field.html"");
                }

                if (selectedFeatur");
            WriteLiteral(@"e.properties.fid.getValue() == 10) {
                    header = ""Поле №9"";
                    $(""#analysis-body1"").load(""html/ninth_field.html"");
                }

                if (selectedFeature.properties.fid.getValue() == 11) {
                    header = ""Поле №10"";
                    $(""#analysis-body1"").load(""html/tenth_field.html"");
                }

                if (selectedFeature.properties.fid.getValue() == 12) {
                    header = ""Поле №11"";
                    $(""#analysis-body1"").load(""html/eleventh_field.html"");
                }

                if (selectedFeature.properties.fid.getValue() == 13) {
                    header = ""Поле №12"";
                    $(""#analysis-body1"").load(""html/twelveth_field.html"");
                }

                if (selectedFeature.properties.fid.getValue() == 14) {
                    header = ""Поле №13"";
                    $(""#analysis-body1"").load(""html/thirteenth_field.html"");
                }

        ");
            WriteLiteral(@"        if (selectedFeature.properties.fid.getValue() == 1) {
                    header = ""Поле №14"";
                    $(""#analysis-body1"").load(""html/fourteenth_field.html"");
                }

                $(""#analysis-header"").text(header);
                //$(""#analysis-body1"").load(""html/first_field.html"");
            }
    }

    function onAgroTechnicalTaskModalShown() {

        if (selectedFeature)
            if (selectedFeature != null) {

                var azotValue = 4.5;
                var phosphorValue = 2.1;
                var potassiumValue = 2.1;


                var norm = selectedFeature.properties['Урожайность'].getValue();

                var norm1 = parseInt(norm.substring(0, 2));
                var norm2 = parseInt(norm.substring(3, 5));

                var norm = norm.substring(0, 5)

                var area = parseFloat(selectedFeature.properties['Плошадь'].getValue());

                $(""#normAzotCol"").text(norm);
                $(""#n");
            WriteLiteral(@"ormPhoshorCol"").text(norm);
                $(""#normPotassiumCol"").text(norm);

                $(""#valueAzotcol"").text(azotValue);
                $(""#valuePhosphorcol"").text(phosphorValue);
                $(""#valuePostassiumcol"").text(potassiumValue);

                $(""#areaAzotcol"").text(area);
                $(""#areaPhoshorCol"").text(area);
                $(""#areaPotassiumCol"").text(area);

                $(""#totalAzotcol"").text((azotValue * norm1) + ""-"" + (azotValue * norm2));
                $(""#totalPhosphorcol"").text((phosphorValue * norm1) + ""-"" + (azotValue * norm2));
                $(""#totalPotassiumcol"").text((potassiumValue * norm1) + ""-"" + (azotValue * norm2));
            }
    }

    $(document).ready(function () {
        initializeViewer();

        var elems = Array.prototype.slice.call(document.querySelectorAll('.form-check-input-switchery-primary'));
        elems.forEach(function (html) {
            var switchery = new Switchery(html, { color: '#4caf50' });");
            WriteLiteral(@"
        });

        $('.form-check-input-styled').uniform();

        viewer.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);

        $('#analysis-modal').on('show.bs.modal', function () {
            onAnalysisModalShown();
        });

        $('#agrotechnical-tasks-modal').on('show.bs.modal', function () {
            onAgroTechnicalTaskModalShown();
        });

        add3dModels();
        gotoDemoArea(4.0);
        loadDataSources();
    });

    document.addEventListener('DOMContentLoaded', function () {
        $(""#farmer-recommendations-modal"").on('hide.bs.modal', function () {
            $(""#agrotechnical-tasks-video"").attr('src', '');
        });

        /* Assign the initially stored url back to the iframe src
        attribute when modal is displayed again */
        $(""#farmer-recommendations-modal"").on('show.bs.modal', function () {
            $(""#agrotechnical-tasks-video"").attr('src', '../images/video_2.mp4');
     ");
            WriteLiteral(@"   });

        //$(""#forecast-modal"").on('show.bs.modal', function () {
        //    $(""#yieldImg"").attr('src', '../images/yield_' + selectedFeature.properties.fid.getValue() + "".png"");
        //});


        $(""#water-consump-modal"").on('hide.bs.modal', function () {
            var kanalEntities = kanalSource.entities.values;

            for (var i = 0; i < kanalEntities.length; i++) {
                if (kanalEntities[i].polyline)
                    kanalEntities[i].polyline.material = kanalColor;
            }
        });

    });

    function showItinary(value)
    {
        $(""#itinaryContainer"").attr('src', '../images/../images/wat_bal_itinary_' + value + "".png"");
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
